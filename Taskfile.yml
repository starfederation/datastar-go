version: "3"

vars:
  VERSION: 1.0.1
  GENERATE_DIR: "cmd/generate"
  DATASTAR_BRANCH: '{{.DATASTAR_BRANCH | default "repo-per-sdk"}}'
  TEST_PORT: '{{.TEST_PORT | default "7331"}}'

tasks:
  default:
    cmds:
      - task: generate

  generate:
    desc: Generate consts.go from SDK config
    dir: cmd/generate
    cmds:
      - go run main.go
    sources:
      - main.go
    generates:
      - datastar/consts.go

  libpub:
    cmds:
      - git push origin
      - git tag v{{.VERSION}}
      - git push --tags
      - GOPROXY=proxy.golang.org go list -m github.com/starfederation/datastar-go@v{{.VERSION}}

  test-server:
    desc: Start test server on port {{.TEST_PORT}}
    dir: cmd/testserver
    cmds:
      - go run main.go
    sources:
      - main.go
      - ../../datastar/**/*.go
    env:
      TEST_PORT: "{{.TEST_PORT}}"

  test-download:
    desc: Download SDK test suite from GitHub
    cmds:
      - rm -rf tests
      - mkdir -p tests
      - |
        curl -sL https://github.com/starfederation/datastar/archive/{{.DATASTAR_BRANCH}}.tar.gz | \
        tar xz --strip-components=3 -C tests --wildcards 'datastar-*/sdk/tests/*'

  test:
    desc: Run SDK test suite
    deps: [test-download]
    cmds:
      - cd tests && go run ./cmd/datastar-sdk-tests -server http://localhost:{{.TEST_PORT}}

  hello:
    desc: Run helloworld example
    dir: cmd/examples/helloworld
    cmds:
      - go mod tidy
      - go run .

  hotreload:
    desc: Run hotreload example
    dir: cmd/examples/hotreload
    cmds:
      - go mod tidy
      - go run generate-hotreload-html/main.go
      - go tool reflex -r '^hotreload.html$' --start-service -- sh -c 'go run .'